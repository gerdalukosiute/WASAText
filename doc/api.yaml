openapi: 3.0.3
info:
  title: WASAText API
  version: "4.0"
  description: |
    API specification for the WASAText messaging platform.
servers:
  - url: http://localhost:3000
    description: |
      Local development server
tags:
  - name: login
    description: |
      User authentication
  - name: user
    description: |
      User profile operations
  - name: users
    description: |
      Users query
  - name: conversations
    description: |
      Conversation related operations
  - name: messages
    description: |
      Message related operations
  - name: groups
    description: |
      Group related operations
  - name: media
    description: |
      Media retrieval operation
paths: 
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is
        returned.
      operationId: doLogin
      requestBody:
        description: |
          User details for login or registration
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                User login information
              properties:
                name:
                  type: string
                  description: |
                    The user's name
                  example: "Maria_Smith12"
                  pattern: "^[a-zA-Z0-9_-]{3,16}$"
                  minLength: 3
                  maxLength: 16
      responses:
        "201":
          description: |
            User log-in action successful
          content:
            application/json:
              schema:
                type: object
                description: |
                  Response containing user identifier
                properties:
                  identifier:
                    type: string
                    description: |
                      Unique identifier for the logged-in user
                    example: "user12758923"
                    pattern: '^[a-zA-Z0-9_-]{12}$'
                    minLength: 12
                    maxLength: 12
  /user:
    put:
      tags: ["user"]
      summary: Set or update username
      description: | 
       Allows logged-in user to set or update their username. The new username must be unique.
      operationId: setMyUserName
      security:
        - UserIdentifierAuth: []
      requestBody:
        description: |
          New username details
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                New username information
              properties:
                newName:
                  type: string
                  description: |
                    The new username to set
                  example: "John_Doe_123"
                  pattern: '^[a-zA-Z0-9_]{3,16}$'
                  minLength: 3
                  maxLength: 16
              required:
                - newName
      responses:
        "200":
          description: |
            Username successfully set
          content:
            application/json:
              schema:
                type: object
                description: |
                  Confirmation of username update
                properties:
                  message:
                    type: string
                    description: |
                      Confirmation message
                    example: "Username successfully updated"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "500": { $ref: "#/components/responses/InternalServerError" }
  /user/{userId}:
    parameters:
    - name: userId
      in: path
      required: true
      description: |
        Unique identifier of the user whose profile photo is being updated
      schema:
        type: string
        description: |
          User identifier
        pattern: '^[a-zA-Z0-9_-]{12}$'
        minLength: 12
        maxLength: 12
        example: "user12758923"
    put:
      tags: ["user"]
      summary: Update profile photo of a user
      description: |
        Allows a user to upload and update their profile photo.
      operationId: setMyPhoto
      security:
        - UserIdentifierAuth: []
      requestBody:
        description: |
          The new profile photo for the user
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              description: |
                Details of the photo to be used
              properties:
                photo:
                  type: string
                  format: binary
                  description: |
                    The new profile photo file to upload
                  minLength: 100        # Just enough to ensure file isn't empty
                  maxLength: 5242880    # Maximum 5MB
              required:
              - photo
      responses:
        "200":
          description: |
            Profile photo updated successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Details of the updated profile photo
                properties:
                  userId:
                    type: string
                    description: |
                      Unique identifier of the user
                    pattern: '^[a-zA-Z0-9_-]{12}$'
                    minLength: 12
                    maxLength: 12
                    example: "user12758923"
                  oldPhotoId:
                    type: string
                    description: |
                      The identifier of the previous profile photo
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "old_photo_123456"
                  newPhotoId:
                    type: string
                    description: |
                      The identifier of the updated profile photo
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "new_photo_789012"
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "413": { $ref: "#/components/responses/PayloadTooLarge" }
        "415": { $ref: "#/components/responses/UnsupportedMediaType" }
        "500": { $ref: "#/components/responses/InternalServerError" }
  /users:
    get:
      tags: ["users"]
      summary: Search for users
      description: |
        Allows a user to search for other users by username. Returns a list of matching usernames.
        If a blank search (empty string or just spaces) is used, it will return all users.
      operationId: searchUsers
      security:
        - UserIdentifierAuth: []
      parameters:
        - name: query
          in: query
          required: false
          description: |
            Partial or full username to search for. Use a blank search to retrieve all users.
          schema:
            type: string
            description: |
              Search query
            pattern: '^[a-zA-Z0-9_-]{0,16}$'
            minLength: 0
            maxLength: 16
            example: "Pat"
      responses:
        "200":
          description: |
            List of matching users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Search results containing matching users
                properties:
                  users:
                    type: array
                    description: |
                      List of matching users
                    minItems: 0
                    maxItems: 1000
                    items:
                      type: object
                      description: |
                        User information
                      properties:
                        username:
                          type: string
                          description: |
                            Username of the user
                          pattern: '^[a-zA-Z0-9_-]{3,16}$'
                          minLength: 3
                          maxLength: 16
                          example: "Patric"
                        userId:
                          type: string
                          description: |
                            Unique identifier of the user
                          pattern: '^[a-zA-Z0-9_-]{12}$'
                          minLength: 12
                          maxLength: 12
                          example: "user12758923"
                        profilePhotoId:
                          type: string
                          description: |
                            Identifier of the user's profile photo
                          pattern: "^[a-zA-Z0-9_-]{10,30}$"
                          minLength: 10
                          maxLength: 30
                          example: "photo_789012"
                  total:
                    type: integer
                    description: |
                      Total number of matching users
                    minimum: 0
                    maximum: 1000
                    example: 5
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "500": { $ref: "#/components/responses/InternalServerError" }
  /conversations:
    get:
      tags: ["conversations"]
      summary: Retrieve user conversations
      description: |
        Fetches all conversations for the logged-in user. Conversations are sorted in reverse chronological order,
        including details such as the username or group name, profile/group photo, the date and time of the conversation creation,
        and details of the latest message including its timestamp.
      operationId: getMyConversations
      security:
        - UserIdentifierAuth: []
      responses:
        "200":
          description: |
            List of conversations retrieved successfully
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ConversationListResponse'
        "401": { $ref: "#/components/responses/Unauthorized" }
        "500": { $ref: "#/components/responses/InternalServerError" }
    post:
      tags: ["conversations"]
      summary: Start a new conversation
      description: |
        Allows a user to start a new conversation with another user or group. If a conversation already exists
        between the two users, the existing conversation is returned. The conversation is created
        with an empty message list and the creation timestamp is set.
      operationId: startConversation
      security:
        - UserIdentifierAuth: []
      requestBody:
        description: |
          Details for the new conversation
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                Details for new conversation request
              properties:
                recipients:
                  type: array
                  description: |
                    Usernames of the recipients 
                  minItems: 1
                  maxItems: 50
                  items: 
                    type: string
                    pattern: '^[a-zA-Z0-9_-]{3,16}$'
                    minLength: 3
                    maxLength: 16
                    example: "Tara"
                title: 
                  type: string
                  description: |
                    Optional title for the conversation.
                  pattern: '^[a-zA-Z0-9_ ]{3,16}$'
                  minLength: 3
                  maxLength: 16
                  example: "Group Project"
                isGroup: 
                  type: boolean
                  description: |
                    Indicates if the conversation is a group.
                  default: false 
                  example: true 
              required:
                - recipients
      responses:
        "201":
          description: |
            Conversation started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationListResponse'
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "404":
          description: |
            One or more recipients not found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Recipient not found response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Recipient not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "500": { $ref: "#/components/responses/InternalServerError" }
  /conversations/{conversationId}:
    parameters:
      - name: conversationId
        in: path
        required: true
        description: |
          The unique identifier of the conversation
        schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]{6,20}$'
          minLength: 6
          maxLength: 20
          example: "chat207"
    get:
      tags: ["conversations"]
      summary: Retrieve details and messages of a specific conversation
      description: |
        Fetches all messages in a specific conversation for the logged-in user. Messages are displayed 
        in reverse chronological order and include the timestamp, content, sender's username, and 
        status (received/read for sent messages). Reactions to messages are also included. The endpoint 
        also provides conversation details such as participants and group status.
      operationId: getConversation
      security:
        - UserIdentifierAuth: []
      responses:
        "200":
          description: |
            Conversation details and messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Conversation details and messages 
                properties:
                  conversationId:
                    type: string
                    description: |
                      Unique identifier of the conversation
                    pattern: '^[a-zA-Z0-9_-]{6,20}$'
                    minLength: 6
                    maxLength: 20
                    example: "chat207"
                  title:
                    type: string
                    description: |
                      Username or group name
                    pattern: '^[a-zA-Z0-9_-\s]{1,50}$'
                    minLength: 1
                    maxLength: 50
                    example: "Birthday party"
                  isGroup:
                    type: boolean
                    description: |
                      Indicates if the conversation is a group
                    example: true
                  createdAt:
                    type: string
                    format: date-time
                    description: |
                      Timestamp of when the conversation was created
                    example: "2025-01-10T09:15:00Z"
                    minLength: 10
                    maxLength: 150
                  participants:
                    type: array
                    description: |
                      List of users participating in the conversation
                    minItems: 2
                    maxItems: 50
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                          description: |
                            Username of the participant
                          pattern: '^[a-zA-Z0-9_-]{3,16}$'
                          minLength: 3
                          maxLength: 16
                          example: "Duke"
                        userId:
                          type: string
                          description: |
                            Unique identifier of the participant
                          pattern: '^[a-zA-Z0-9_-]{12}$'
                          minLength: 12
                          maxLength: 12
                          example: "user12758923"
                        profilePhotoId:
                          type: string
                          description: |
                            Identifier of the participant's profile photo
                          pattern: '^[a-zA-Z0-9_-]{10,30}$'
                          minLength: 10
                          maxLength: 30
                          example: "photo_789012"
                  messages:
                    type: array
                    description: |
                      List of messages in the conversation
                    minItems: 0
                    maxItems: 1000
                    items:
                      type: object
                      properties:
                        messageId:
                          type: string
                          description: |
                            Unique identifier of the message
                          pattern: '^[a-zA-Z0-9_-]{10,30}$'
                          minLength: 10
                          maxLength: 30
                          example: "msg678901478"
                        sender:
                          type: object
                          description: |
                            Details of the message sender
                          properties:
                            username:
                              type: string
                              description: |
                                Username of the sender
                              pattern: '^[a-zA-Z0-9_-]{3,16}$'
                              minLength: 3
                              maxLength: 16
                              example: "Duke"
                            userId:
                              type: string
                              description: |
                                Unique identifier of the sender
                              pattern: '^[a-zA-Z0-9_-]{12}$'
                              minLength: 12
                              maxLength: 12
                              example: "user12345671"
                        type:
                          type: string
                          enum: [text, photo]
                          description: |
                            Type of the message
                          example: "photo"
                          minLength: 4
                          maxLength: 5
                        content:
                          type: string
                          description: |
                            Content of the  message:
                            - For `text`, this is the actual message text.
                            - For `photo`, this is an identifier pointing to the photo.
                          pattern: "^.{1,1000}$"
                          minLength: 1
                          maxLength: 1000
                          example: "photo_987654"
                        timestamp:
                          type: string
                          format: date-time
                          description: |
                            Date and time when the message was sent
                          example: "2025-01-11T14:30:00Z"
                          minLength: 10
                          maxLength: 150
                        status:
                          type: string
                          enum: [delivered, read]
                          description: |
                            Status of the message for the sender
                          example: "read"
                          minLength: 4
                          maxLength: 9
                        reactions:
                          type: array
                          description: |
                            Reactions to the message
                          minItems: 0
                          maxItems: 50
                          items:
                            type: object
                            properties:
                              username:
                                type: string
                                description: |
                                  Username of the user who reacted
                                pattern: '^[a-zA-Z0-9_-]{3,16}$'
                                minLength: 3
                                maxLength: 16
                                example: "John"
                              interaction:
                                type: string
                                description: |
                                  The type of interaction added
                                enum: [reaction, reply]
                                example: "reaction"
                                minLength: 5
                                maxLength: 8
                              content:
                                type: string
                                description: |
                                  The emoji reaction or reply text
                                pattern: '^.{1,1000}$'
                                minLength: 1
                                maxLength: 1000
                                example: "\U0001F44D"
                              timestamp:
                                type: string
                                format: date-time
                                description: |
                                  Date and time when the reaction/reply was added
                                example: "2025-01-11T14:30:00Z"
                                minLength: 10
                                maxLength: 150
        "401": { $ref: "#/components/responses/Unauthorized" }
        "404":  { $ref: "#/components/responses/ConversationNotFound" }
        "500": { $ref: "#/components/responses/InternalServerError" }
  /conversations/{conversationId}/messages:
    parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: string
          description: |
            Unique identifier of the conversation
          pattern: '^[a-zA-Z0-9_-]{6,20}$'
          minLength: 6
          maxLength: 20
          example: "chat207"
    post:
      tags: ["messages"]
      summary: Send a message
      description: |
        Allows a user to send a new message in a specific conversation. The message can be either
        text or a photo.
      operationId: sendMessage
      security:
        - UserIdentifierAuth: []
      requestBody:
        description: |
          Details of the message to be sent
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                Message details
              properties:
                type:
                  type: string
                  enum: [text]
                  description: Type of the message (text)
                  example: "text"
                  minLength: 4
                  maxLength: 4
                content:
                  type: string
                  description: |
                    The content of the message. 
                  pattern: '^.{1,1000}$'
                  minLength: 1
                  maxLength: 1000
                  example: "Hi, how are you doing today?"
                parentMessageId:
                  type: string
                  description: |
                    Optional ID of the message this is replying to. If provided, this message will be treated as a reply.
                  pattern: '^[a-zA-Z0-9_-]{10,30}$'
                  minLength: 10
                  maxLength: 30
                  example: "msg678906718"
              required:
                - content
                - type
          multipart/form-data:
            schema: 
              type: object
              description: |
                Message details for photo messages
              properties: 
                type: 
                  type: string
                  enum: [photo]
                  description: |
                    Type of message.
                  example: "photo"
                  minLength: 5
                  maxLength: 5
                photo: 
                  type: string
                  format: binary
                  description: |
                    The photo file to upload
                  minLength: 100
                  maxLength: 10485760
                parentMessageId:
                  type: string
                  description: |
                    Optional ID of the message this is replying to. If provided, this message will be treated as a reply.
                  pattern: '^[a-zA-Z0-9_-]{10,30}$'
                  minLength: 10
                  maxLength: 30
                  example: "msg678906718"
              required: 
                - type
                - photo
      responses:
        "201":
          description: |
            Message sent successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Message success response
                properties:
                  messageId:
                    type: string
                    description: |
                      Unique identifier of the newly sent message
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "msg678906718"
                  conversationId:
                    type: string
                    description: |
                      Unique identifier of the conversation
                    pattern: '^[a-zA-Z0-9_-]{6,20}$'
                    minLength: 6
                    maxLength: 20
                    example: "chat40"
                  parentMessageId:
                    type: string
                    description: |
                      ID of the message this is replying to. Only present for reply messages. Will be omitted in regular messages.
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "msg678906700"
                  sender:
                    type: object
                    description: |
                      Details of the message sender
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the sender
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "Karen"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the sender
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user12758923"
                  content:
                    type: string
                    description: |
                      Content of the message:
                      - For `text`, this is the actual message text.
                      - For `photo`, this is a URL to fetch the actual photo data.
                    pattern: "^[\\s\\S]*$"
                    minLength: 1
                    maxLength: 14000000
                    example: "Hi, how are you doing today?"
                  contentType: 
                    type: string
                    description: |
                      This is the MIME type of content.
                    pattern: '^[a-zA-Z0-9.+-]+/[a-zA-Z0-9.+-]+$'
                    example: "image/jpeg"
                    minLength: 8
                    maxLength: 100
                  type:
                    type: string
                    enum: [text, photo]
                    description: |
                      Type of the message
                    example: "text"
                    minLength: 4
                    maxLength: 5
                  timestamp:
                    type: string
                    format: date-time
                    description: |
                      Date and time when the message was sent
                    example: "2025-01-11T14:45:00Z"
                    minLength: 10
                    maxLength: 150
                  status:
                    type: string
                    enum: [delivered, read]
                    description: |
                      Current status of the message
                    example: "delivered"
                    minLength: 4
                    maxLength: 9
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "404": { $ref: "#/components/responses/ConversationNotFound" }
        "413": { $ref: "#/components/responses/PayloadTooLarge" }
        "500": { $ref: "#/components/responses/InternalServerError" }
  /media/{mediaId}:
    parameters: 
      - name: mediaId
        in: path
        required: true
        schema: 
          type: string
          description:  |
            Unique identifier of the media file
          pattern: '^media[0-9]+$'
          minLength: 10
          maxLength: 30
          example: "media1678906718"
    get: 
      tags: ["media"]
      summary: Get media file
      description: |
        Retrieves a media file by ID. Used to fetch binary data of media files.
      operationId: getMedia
      security: 
        - UserIdentifierAuth: []
      responses: 
        "200": 
          description: |
            Media file retrieved successfully
          content: 
            image/*:
              schema:
                type: string
                format: binary
                description: |
                  The binary data of the requested media file
                minLength: 100
                maxLength: 10485760
                example: "wahi90q904t7uhqnek8190je901y2hndiehd9waiksmaoiei294y7u2nwsmp%$&*()_{KG^&FVBS LjIHSNL,W Q;A];lljhjgjj"
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "404":
          description: |
            Media file not found
          content:
            application/json:
              schema:
                description: |
                  Media not found error
                type: object
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Media file not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "500": { $ref: "#/components/responses/InternalServerError" }
  /messages/{messageId}:
    parameters:
    - name: messageId
      in: path
      required: true
      description: |
        Unique identifier of the message to be deleted
      schema:
        type: string
        description: |
          Message Id
        pattern: '^[a-zA-Z0-9_-]{10,30}$'
        minLength: 10
        maxLength: 30
        example: "msg123456789"
    delete:
      tags: ["messages"]
      summary: Delete a message
      description: |
        Allows a user to delete a message they have sent. This operation is restricted to the
        sender of the message, ensuring that users cannot delete messages sent by others.
      operationId: deleteMessage
      security:
        - UserIdentifierAuth: []
      responses:
        "200":
          description: |
            Message deleted successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Successful message deletion response
                properties:
                  messageId:
                    type: string
                    description: |
                      Unique identifier of the deleted message
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "msg123456789"
                  user:
                    type: object
                    description: |
                      Details of the user who deleted the message
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the user who deleted the message
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "Joshua"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the user who deleted the message
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user27384752"
                  deletedAt:
                    type: string
                    format: date-time
                    description: |
                      Timestamp of when the message was deleted
                    example: "2025-01-15T09:30:00Z"
                    minLength: 10
                    maxLength: 150
                  conversationId:
                    type: string
                    description: |
                      Unique identifier of the conversation the message belonged to
                    pattern: '^[a-zA-Z0-9_-]{6,20}$'
                    minLength: 6
                    maxLength: 20
                    example: "chat40"
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403":
          description: |
            Forbidden - User is not the sender of the message
          content:
            application/json:
              schema:
                type: object
                description: |
                  Forbidden message deletion response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "No permission to delete"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "404":
          description: |
            Message not found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Message not found response 
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Message not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "500": { $ref: "#/components/responses/InternalServerError" }
  /messages/{messageId}/forward:
    parameters:
      - name: messageId
        in: path
        required: true
        description: |
          Unique identifier of the message to be forwarded
        schema:
          type: string
          description: |
            Message Id
          pattern: '^[a-zA-Z0-9_-]{10,30}$'
          minLength: 10
          maxLength: 30
          example: "msg123456789"
    post:
      tags: ["messages"]
      summary: Forward a message to another conversation
      description: |
        Allows a user to forward an existing message to another conversation. The forwarded message 
        retains the original content and sender information, but is marked as a forwarded message. 
        The user must have access to both the original and target conversations.
      operationId: forwardMessage
      security:
        - UserIdentifierAuth: []
      requestBody:
        description: |
          Details of the message to be forwarded
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                Request to forward
              properties:
                targetConversationId:
                  type: string
                  description: |
                    Unique identifier of the target conversation
                  pattern: '^[a-zA-Z0-9_-]{6,20}$'
                  minLength: 6
                  maxLength: 20
                  example: "chat65"
              required:
                - targetConversationId
      responses:
        "201": 
          description: |
            Message forwarded successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Succesful forwarding response
                properties:
                  newMessageId:
                    type: string
                    description: |
                      Unique identifier of the forwarded message in the target conversation
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "msg67890896"
                  originalMessageId:
                    type: string
                    description: |
                      Unique identifier of the original message
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "msg123456789"
                  targetConversationId:
                    type: string
                    description: |
                      Unique identifier of the target conversation
                    pattern: '^[a-zA-Z0-9_-]{6,20}$'
                    minLength: 6
                    maxLength: 20
                    example: "chat65"
                  originalSender:
                    type: object
                    description: |
                      Details of the original sender
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the original sender
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "Sally"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the original sender
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user12758923"
                  forwardedBy:
                    type: object
                    description: |
                      Details of the user who forwarded the message
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the user who forwarded the message
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "John"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the user who forwarded the message
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user12758924"
                  content:
                    type: string
                    description: |
                      Content of the message:
                      - For `text`, this is the actual message text.
                      - For `photo`, this is the photo identifier.
                    pattern: '^.{1,1000}$'
                    minLength: 1
                    maxLength: 1000
                    example: "Your friend is so annoying"
                  type:
                    type: string
                    enum: [text, photo]
                    description: |
                      Type of the message (text or photo)
                    example: "text"
                    minLength: 4
                    maxLength: 5
                  originalTimestamp:
                    type: string
                    format: date-time
                    description: |
                      Date and time when the original message was sent
                    example: "2025-01-11T14:30:00Z"
                    minLength: 10
                    maxLength: 150
                  forwardedTimestamp:
                    type: string
                    format: date-time
                    description: |
                      Date and time when the message was forwarded
                    example: "2025-01-11T15:00:00Z"
                    minLength: 10
                    maxLength: 150
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403":
          description: |
            Forbidden - User doesn't have access to the target conversation
          content:
            application/json:
              schema:
                type: object
                description: |
                  Forbidden forward response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "No permission to forward"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "404":
          description: |
            Message or conversation not found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Target not found response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Target not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "500": { $ref: "#/components/responses/InternalServerError" }
  /messages/{messageId}/comments:
    parameters:
      - name: messageId
        in: path
        required: true
        description: |
          Unique identifier of the message to be forwarded
        schema:
          type: string
          description: |
            Message Id
          pattern: '^[a-zA-Z0-9_-]{10,30}$'
          minLength: 10
          maxLength: 30
          example: "msg123456789"
    post:
        tags: ["messages"]
        summary: Add a reaction or reply to a message
        description: |
          Allows a user to add an emoji reaction to an existing message. 
          Reactions are typically emojis and are associated with the user's username. 
        operationId: commentMessage
        security:
          - UserIdentifierAuth: []
        requestBody:
          description: |
            Details of the reaction or reply to be added
          required: true
          content:
            application/json:
              schema:
                type: object
                description: |
                  Comment request
                properties:
                  content:
                    type: string
                    description: |
                      The emoji reaction to add
                    pattern: '^.{1,1000}$'
                    minLength: 1
                    maxLength: 1000
                    example: "\U0001F44D"
                required:
                  - content
        responses:
          "201": 
            description: |
              Reaction added successfully
            content:
              application/json:
                schema:
                  type: object
                  description: |
                    Success response for adding reaction
                  properties:
                    interactionId:
                      type: string
                      description: |
                        Unique identifier of the newly added reaction 
                      pattern: '^[a-zA-Z0-9_-]{10,30}$'
                      minLength: 10
                      maxLength: 30
                      example: "int67890123"
                    messageId:
                      type: string
                      description: |
                        Unique identifier of the message the reaction was added to
                      pattern: '^[a-zA-Z0-9_-]{10,30}$'
                      minLength: 10
                      maxLength: 30
                      example: "msg123456789"
                    user:
                      type: object
                      description: |
                        Details of the user who added the reaction 
                      properties:
                        username:
                          type: string
                          description: |
                            Username of the user who added the reaction 
                          pattern: '^[a-zA-Z0-9_-]{3,16}$'
                          minLength: 3
                          maxLength: 16
                          example: "Bob"
                        userId:
                          type: string
                          description: |
                            Unique identifier of the user who added the reaction 
                          pattern: '^[a-zA-Z0-9_-]{12}$'
                          minLength: 12
                          maxLength: 12
                          example: "user15267385"
                    content:
                      type: string
                      description: |
                        The content of the reaction 
                      pattern: '^.{1,1000}$'
                      minLength: 1
                      maxLength: 1000
                      example: "\U0001F44D"
                    timestamp:
                      type: string
                      format: date-time
                      description: |
                        Date and time when the reaction or reply was added
                      example: "2025-01-11T15:30:00Z"
                      minLength: 10
                      maxLength: 150
          "400": { $ref: "#/components/responses/BadRequest" }
          "401": { $ref: "#/components/responses/Unauthorized" }
          "404":
            description: |
              Message not found
            content:
              application/json:
                schema:
                  type: object
                  description: |
                    Message not found response
                  properties:
                    error:
                      type: string
                      description: |
                        Error message
                      example: "Message not found"
                      pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                      minLength: 10
                      maxLength: 100
          "500": { $ref: "#/components/responses/InternalServerError" }
  /messages/{messageId}/comments/{commentId}:
    parameters:
      - name: messageId
        in: path
        required: true
        description: |
          Unique identifier of the message containing the reaction 
        schema:
          type: string
          description: |
            Message Id
          pattern: '^[a-zA-Z0-9_-]{10,30}$'
          minLength: 10
          maxLength: 30
          example: "msg123456789"
      - name: commentId
        in: path
        required: true
        description: |
          Unique identifier of the reaction to be removed
        schema:
          type: string
          description: |
            Comment Id
          pattern: '^[a-zA-Z0-9_-]{10,30}$'
          minLength: 10
          maxLength: 30
          example: "int67890123"
    delete:
      tags: ["messages"]
      summary: Remove a reaction from a message
      description: |
        Allows a user to remove their previously added reaction (emoji) from a specific message. 
        Only the user who added the reaction can delete it. This operation is irreversible.
      operationId: uncommentMessage
      security:
        - UserIdentifierAuth: []
      responses:
        "200":
          description: |
            Reaction removed successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Sucessful uncomment response
                properties:
                  messageId:
                    type: string
                    description: |
                      Unique identifier of the message from which the reaction was removed
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "msg123456789"
                  interactionId:
                    type: string
                    description: |
                      Unique identifier of the removed reaction
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "int67890123"
                  user:
                    type: object
                    description: |
                      Details of the user who removed the reaction
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the user who removed the reaction
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "Bob"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the user who removed the reaction 
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user27846379"
                  removedAt:
                    type: string
                    format: date-time
                    description: |
                      Date and time when the reaction was removed
                    example: "2025-01-11T16:45:00Z"
                    minLength: 10
                    maxLength: 150
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403":
          description: |
            Forbidden - User is not the owner of the reaction 
          content:
            application/json:
              schema:
                type: object
                description: |
                  Forbidden response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "No permission to remove"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "404":
          description: |
            Message or reaction not found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Not found response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Item not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "500": { $ref: "#/components/responses/InternalServerError" }
  /messages/{messageId}/status:
    parameters:
      - name: messageId
        in: path
        required: true
        description: |
          Unique identifier of the message to be forwarded
        schema:
          type: string
          description: |
            Message Id
          pattern: '^[a-zA-Z0-9_-]{10,30}$'
          minLength: 10
          maxLength: 30
          example: "msg123456789"
    put:
      tags: ["messages"]
      summary: Update message status
      description: |
        Updates the status of a specific message. This endpoint is typically used to mark messages
        as delivered or read. Only the recipient of the message should be able to update its status.
      operationId: updateMessageStatus
      security:
        - UserIdentifierAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                Message status request
              properties:
                status:
                  type: string
                  enum: [delivered, read]
                  description: |
                    The new status of the message
                  example: "read"
                  minLength: 4
                  maxLength: 9
              required:
                - status
      responses:
        "200":
          description: |
            Message status updated successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Success status update response 
                properties:
                  messageId:
                    type: string
                    description: |
                      Unique identifier of the updated message
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "msg123456789"
                  status:
                    type: string
                    enum: [delivered, read]
                    description: |
                      The updated status of the message
                    minLength: 4
                    maxLength: 9 
                    example: "read"
                  updatedBy:
                    type: object
                    description: |
                      Details of the user who updated the message status
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the user who updated the status
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "Alice"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the user who updated the status
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user15267364"
                  updatedAt:
                    type: string
                    format: date-time
                    description: |
                      Date and time when the message status was updated
                    minLength: 10
                    maxLength: 150
                    example: "2025-01-11T17:30:00Z"
                  conversationId:
                    type: string
                    description: |
                      Unique identifier of the conversation the message belongs to
                    pattern: '^[a-zA-Z0-9_-]{6,20}$'
                    minLength: 6
                    maxLength: 20
                    example: "chat40"
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403":
          description: |
            Forbidden - User is not the recipient of the message
          content:
            application/json:
              schema:
                type: object
                description: |
                  Forbidden status response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Not permitted"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "404":
          description: |
            Message not found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Not found response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Message not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "500": { $ref: "#/components/responses/InternalServerError" }
  /groups/{groupId}:
    parameters:
      - name: groupId
        in: path
        required: true
        description: |
          Unique identifier of the group
        schema:
          type: string
          description: |
            Group Id
          pattern: '^[a-zA-Z0-9_-]{6,20}$'
          minLength: 6
          maxLength: 20
          example: "group123456"
    post:
      tags: ["groups"]
      summary: Add users to a group
      description: |
        Allows a user to add one or more users to a group conversation. 
        The user performing this action must already be a member of the group.
        This endpoint handles the addition of multiple users at once and provides
        feedback on successful additions and failures.
      operationId: addToGroup
      security:
        - UserIdentifierAuth: []
      requestBody:
        description: |
          List of users to add to the group
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                Add to group request
              properties:
                usernames:
                  type: array
                  description: |
                    List of usernames to add to the group
                  minItems: 1
                  maxItems: 50
                  items:
                    type: string
                    pattern: '^[a-zA-Z0-9_-]{3,16}$'
                    minLength: 3
                    maxLength: 16
                  example: ["Alice", "Bob"]
              required:
                - usernames
      responses:
        "200":
          description: |
            Users added successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Successful add to group response
                properties:
                  groupName: 
                    type: string
                    description: |
                      The name for the group
                    pattern: '^[a-zA-Z0-9_\s-]{3,30}$'
                    minLength: 3
                    maxLength: 30
                    example: "Meeting"
                  groupId:
                    type: string
                    description: |
                      Unique identifier of the group
                    pattern: '^[a-zA-Z0-9_-]{6,20}$'
                    minLength: 6
                    maxLength: 20
                    example: "group123456"
                  addedUsers:
                    type: array
                    description: |
                      List of users successfully added to the group
                    minItems: 0
                    maxItems: 50
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                          description: |
                            Username of the added user
                          pattern: '^[a-zA-Z0-9_-]{3,16}$'
                          minLength: 3
                          maxLength: 16
                          example: "Alice"
                        userId:
                          type: string
                          description: |
                            Unique identifier of the added user
                          pattern: '^[a-zA-Z0-9_-]{12}$'
                          minLength: 12
                          maxLength: 12
                          example: "user63527843"
                    example: [
                    {"username": "Alice", "userId": "user63527843"},
                    {"username": "Bob", "userId": "user64789653"}
                  ]
                  failedUsers:
                    type: array
                    description: |
                      List of usernames that could not be added (non-existent/not found users)
                    minItems: 0
                    maxItems: 50
                    items:
                      type: string
                      pattern: '^[a-zA-Z0-9_-]{3,16}$'
                      minLength: 3
                      maxLength: 16
                    example: ["Charlie"]
                  updatedMemberCount:
                    type: integer
                    description: |
                      Updated total number of members in the group after addition
                    minimum: 2
                    maximum: 1000
                    example: 17
                  addedBy:
                    type: object
                    description: |
                      Details of the user who added the new members
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the user who added the new members
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "David"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the user who added the new members
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user67589362"
                  timestamp:
                    type: string
                    format: date-time
                    description: |
                      Date and time when the users were added to the group
                    example: "2025-01-12T10:30:00Z"
                    minLength: 10
                    maxLength: 150
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "404":
          description: |
            Group not found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Group not found response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Group not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "500": { $ref: "#/components/responses/InternalServerError" }
    delete:
      tags: ["groups"]
      summary: Leave a group
      description: |
        Allows a user to leave a group conversation. If the user is the only member of the group,
        the group is deleted. If other members remain, the user is removed from the group.
        This action is irreversible and may affect other group members.
      operationId: leaveGroup
      security:
        - UserIdentifierAuth: []
      responses:
        "200":
          description: |
            User successfully left the group
          content:
            application/json:
              schema:
                type: object
                description: |
                  Success group leaving response
                properties:
                  groupId:
                    type: string
                    description: |
                      Unique identifier of the group the user left
                    pattern: '^[a-zA-Z0-9_-]{6,20}$'
                    minLength: 6
                    maxLength: 20
                    example: "group123456"
                  user:
                    type: object
                    description: |
                      Details of the user who left the group
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the user who left the group
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "Peter"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the user who left the group
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user56273546"
                  isGroupDeleted:
                    type: boolean
                    description: |
                      Indicates whether the group was deleted after the user left
                    example: false
                  remainingMemberCount:
                    type: integer
                    description: |
                      Number of members remaining in the group after the user left
                    minimum: 0
                    maximum: 999
                    example: 5
                  leftAt:
                    type: string
                    format: date-time
                    description: |
                      Date and time when the user left the group
                    example: "2025-01-12T11:45:00Z"
                    minLength: 10
                    maxLength: 150
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403":
          description: |
            Forbidden - User is not a member of the group
          content:
            application/json:
              schema:
                type: object
                description: |
                  Forbidden leaving response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "You are not a member of this group"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "404":
          description: |
            Group not found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Group not found leaving response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Group not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "500": { $ref: "#/components/responses/InternalServerError" }
    put:
      tags: ["groups"]
      summary: Update the group name
      description: |
        Allows a user to update the name of a group conversation. 
        The user must be a member of the group, and the new group name must be unique.
        This action will be visible to all group members.
      operationId: setGroupName
      security:
        - UserIdentifierAuth: []
      requestBody:
        description: |
          The new name for the group
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                Group name update request
              properties:
                groupName:
                  type: string
                  description: |
                    The new name for the group
                  pattern: '^[a-zA-Z0-9_\s-]{3,30}$'
                  minLength: 3
                  maxLength: 30
                  example: "Project Alpha"
              required:
                - groupName
      responses:
        "200":
          description: |
            Group name updated successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Group name update success response
                properties:
                  groupId:
                    type: string
                    description: |
                      Unique identifier of the group
                    pattern: '^[a-zA-Z0-9_-]{6,20}$'
                    minLength: 6
                    maxLength: 20
                    example: "group123456"
                  oldGroupName:
                    type: string
                    description: |
                      The previous name of the group
                    pattern: '^[a-zA-Z0-9_\s-]{3,30}$'
                    minLength: 3
                    maxLength: 30
                    example: "Meeting"
                  newGroupName:
                    type: string
                    description: |
                      The updated name of the group
                    pattern: '^[a-zA-Z0-9_\s-]{3,30}$'
                    minLength: 3
                    maxLength: 30
                    example: "Project Alpha"
                  updatedBy:
                    type: object
                    description: |
                      Details of the user who updated the group name
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the user who updated the group name
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "Tom"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the user who updated the group name
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user78901213"
                  updatedAt:
                    type: string
                    format: date-time
                    description: |
                      Date and time when the group name was updated
                    example: "2025-01-12T14:30:00Z"
                    minLength: 10
                    maxLength: 150
                  memberCount:
                    type: integer
                    description: |
                      Current number of members in the group
                    minimum: 2
                    maximum: 1000
                    example: 15
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403":
          description: |
            Forbidden - User is not a member of the group
          content:
            application/json:
              schema:
                type: object
                description: |
                  Forbidden group name change response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "No permission to update"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "404":
          description: |
            Group not found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Group not found name change response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Group not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "409":
          description: |
            Conflict - New group name already exists
          content:
            application/json:
              schema:
                type: object
                description: |
                  group name confilct response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "group with this name exists"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "500": { $ref: "#/components/responses/InternalServerError" }
    patch:
      tags: ["groups"]
      summary: Update the group photo
      description: |
        Allows a user to update the photo of a group conversation. 
        The user must be a member of the group. The new photo should be uploaded directly
        as part of this request. This action will be visible to all group members.
      operationId: setGroupPhoto
      security:
        - UserIdentifierAuth: []
      requestBody:
        description: |
          The new photo for the group
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              description: |
                Request for group photo update
              properties:
                photo:
                  type: string
                  format: binary
                  description: |
                    The new group photo file to upload
                  minLength: 100
                  maxLength: 5242880
      responses:
        "200":
          description: |
            Group photo updated successfully
          content:
            application/json:
              schema:
                type: object
                description: |
                  Success group photo update response
                properties:
                  groupId:
                    type: string
                    description: |
                      Unique identifier of the group
                    pattern: '^[a-zA-Z0-9_-]{6,20}$'
                    minLength: 6
                    maxLength: 20
                    example: "group123456"
                  oldPhotoId:
                    type: string
                    description: |
                      The identifier of the previous group photo
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "photo_123456789"
                  newPhotoId:
                    type: string
                    description: |
                      The identifier of the updated group photo
                    pattern: '^[a-zA-Z0-9_-]{10,30}$'
                    minLength: 10
                    maxLength: 30
                    example: "photo_987654321"
                  updatedBy:
                    type: object
                    description: |
                      Details of the user who updated the group photo
                    properties:
                      username:
                        type: string
                        description: |
                          Username of the user who updated the group photo
                        pattern: '^[a-zA-Z0-9_-]{3,16}$'
                        minLength: 3
                        maxLength: 16
                        example: "Trip"
                      userId:
                        type: string
                        description: |
                          Unique identifier of the user who updated the group photo
                        pattern: '^[a-zA-Z0-9_-]{12}$'
                        minLength: 12
                        maxLength: 12
                        example: "user63728957"
                  updatedAt:
                    type: string
                    format: date-time
                    description: |
                      Date and time when the group photo was updated
                    example: "2025-01-12T15:45:00Z"
                    minLength: 10
                    maxLength: 150
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403":
          description: |
            Forbidden - User is not a member of the group
          content:
            application/json:
              schema:
                type: object
                description: |
                  Forbidden group photo update response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "No permission to update photo"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "404":
          description: |
            Group not found
          content:
            application/json:
              schema:
                type: object
                description: |
                  Group not found update photo response
                properties:
                  error:
                    type: string
                    description: |
                      Error message
                    example: "Group not found"
                    pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                    minLength: 10
                    maxLength: 100
        "413": { $ref: "#/components/responses/PayloadTooLarge" }
        "415": { $ref: "#/components/responses/UnsupportedMediaType" }
        "500": { $ref: "#/components/responses/InternalServerError" }
components:
  securitySchemes:
    UserIdentifierAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        User identifier sent by the server in the login.
  schemas: 
    ConversationListResponse:
      type: object
      description: |
        Conversation list response
      properties:
        conversations:
          type: array
          description: |
            List of user conversations
          minItems: 0
          maxItems: 10000
          items:
            $ref: '#/components/schemas/ConversationItem'
        total:
          type: integer
          description: |
            Total number of conversations
          minimum: 0
          maximum: 10000
          example: 5
    ConversationItem:
      type: object
      description: |
        Conversation details
      properties:
        conversationId:
          type: string
          description: |
            Unique identifier for the conversation
          pattern: '^[a-zA-Z0-9_-]{6,20}$'
          minLength: 6
          maxLength: 20
          example: "chat207"
        title:
          type: string
          description: |
            Username of recipient or group name
          pattern: '^[a-zA-Z0-9_-]{3,16}$'
          minLength: 3
          maxLength: 16
          example: "Lisa"
        createdAt:
          type: string
          format: date-time
          description: |
            Date and time when the conversation was created
          example: "2025-01-10T09:15:00Z"
          minLength: 10
          maxLength: 150
        profilePhotoId:
          type: string
          description: |
            Identifier of the profile or group photo
          pattern: "^[a-zA-Z0-9_-]{10,30}$"
          minLength: 10
          maxLength: 30
          example: "photo_789012"
        isGroup:
          type: boolean
          description: |
            Indicates if the conversation is a group
          example: false
        lastMessage:
          $ref: '#/components/schemas/LastMessage'
    LastMessage:
      type: object
      description: |
        Details about the last message
      properties:
        type:
          type: string
          enum: [text, photo]
          description: |
            Type of the last message
          minLength: 4
          maxLength: 5
          example: "photo"
        content:
          type: string
          description: |
            Text preview of the last message (if `type` is `text`) or
            an icon (if `type` is `photo`).
          pattern: "^.{0,100}$"
          minLength: 0
          maxLength: 100
          example: "📷"
        timestamp:
          type: string
          format: date-time
          description: |
            Date and time of the last message
          example: "2025-01-11T14:30:00Z"
          minLength: 10
          maxLength: 150

  responses:
    Unauthorized:
      description: |
        The user identifier is missing or is expired
      content:
        application/json:
          schema:
            type: object
            description: |
              Error details for unauthorized access
            properties:
              error:
                type: string
                description: |
                  Error message
                example: "Unauthorized access"
                pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                minLength: 10
                maxLength: 100

    BadRequest:
      description: |
        The request was not compliant with the documentation (eg. missing fields, etc)
      content:
        application/json:
          schema:
            type: object
            description: |
              Error details for bad request
            properties:
              error:
                type: string
                description: |
                  Error message
                example: "Invalid request parameters"
                pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                minLength: 10
                maxLength: 100

    InternalServerError:
      description: |
        The server encountered an internal error. Further info in server logs
      content:
        application/json:
          schema:
            type: object
            description: |
              Error details for internal server error
            properties:
              error:
                type: string
                description: |
                  Error message
                example: "Internal server error occurred"
                pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                minLength: 10
                maxLength: 100

    ConversationNotFound:
      description: |
        The specified conversationId was not found
      content:
        application/json:
          schema:
            type: object
            description: |
              Error details for conversation not found
            properties:
              error:
                type: string
                description: |
                  Error message
                example: "Conversation not found"
                pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                minLength: 10
                maxLength: 100
                
    PayloadTooLarge:
      description: |
        The uploaded file is too large
      content:
        application/json:
          schema:
            type: object
            description: |
              Error details for file size limit exceeded
            properties:
              error:
                type: string
                description: |
                  Error message
                pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                minLength: 10
                maxLength: 100
                example: "File size exceeds the maximum limit"

    UnsupportedMediaType:
      description: |
        Unsupported media type
      content:
        application/json:
          schema:
            type: object
            description: |
              Error details for unsupported file type
            properties:
              error:
                type: string
                description: |
                  Error message
                pattern: '^[a-zA-Z0-9_ ]{10,100}$'
                minLength: 10
                maxLength: 100
                example: "Unsupported file type"

security:
  - UserIdentifierAuth: []